type: edu
custom_name: stage5
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.v6.common.FileUtils;
    import org.hyperskill.hstest.v6.stage.BaseStageTest;
    import org.hyperskill.hstest.v6.testcase.CheckResult;
    import org.hyperskill.hstest.v6.testcase.TestCase;

    import java.util.List;

    public class EncryptDecryptTest extends BaseStageTest<String> {
        public EncryptDecryptTest() {
            super(Main.class);
        }

        @Override
        public List<TestCase<String>> generate() {
            return List.of(
                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "5",
                        "-in", "in.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("\\jqhtrj%yt%m~ujwxpnqq&")
                    .addFile("in.txt", "Welcome to hyperskill!"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "0",
                        "-mode", "enc",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("Hello")
                    .addFile("input.txt", "Hello"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "1",
                        "-in", "i.txt",
                        "-out", "output.txt",
                        "-mode", "enc"
                    )
                    .setAttach("123456789")
                    .addFile("i.txt", "012345678"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-in", "input.txt",
                        "-out", "output.txt",
                        "-key", "5"
                    )
                    .setAttach("Welcome to hyperskill!")
                    .addFile("input.txt", "\\jqhtrj%yt%m~ujwxpnqq&"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "0",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("Hi")
                    .addFile("input.txt", "Hi"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "1",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("111122223333")
                    .addFile("input.txt", "222233334444")
            );
        }

        @Override
        public CheckResult check(String reply, String clue) {
            String output = FileUtils.readFile("output.txt");
            return new CheckResult(output.trim().equals(clue.trim()));
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: |
    package encryptdecrypt;

    import java.util.Scanner;

    public class Main {
        public static void main(String[] args) {

            int key = 0;
            String command = new String();
            String data = new String();

            for(int i = 0; i < args.length; i+=2) {
                if(args[i].equals("-key")) {
                    key = Integer.parseInt(args[i+1]);
                }

                if(args[i].equals("-mode")) {
                     command=args[i+1];
                }

                if(args[i].equals("-data")) {
                    data = args[i+1];
                }


            }

            if(data.length() < 1) {
                Scanner scanner = new Scanner(System.in);

                data = scanner.nextLine();
            }

            if(command.equals("enc")) {
                encrypt(data, key);
            } else if(command.equals("dec")) {
                decrypt(data, key);
            }




        }

        public static void encrypt(String str, int key) {
            char[] chars = str.toCharArray();

            for(int i = 0; i< chars.length; i++) {
                chars[i] += key;
            }
            System.out.println(chars);
        }

        public static void decrypt(String str, int key) {
            char[] chars = str.toCharArray();

            for(int i = 0; i< chars.length; i++) {
                chars[i] -= key;
            }
            System.out.println(chars);
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/46/stages/249/implement
status: Failed
record: 3
